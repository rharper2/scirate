- if @feed
  - title = @feed.fullname
- else
  - title = signed_in? ? "Group Meeting" : "Scited arXiv papers"

- provide :title, title

.container#feed-page
  .row
    .col-md-12.feed-center
      
      .col-md-3
          h1 =(title) 
          span By default only papers liked and messages left after the previous meeting are shown. You can alter the range using the boxes on the right.
          br
      .col-md-8
          h3 
             | Papers liked: 
             => (@papers.count) 
             / | Messages left: 
             / => (@recent_comments.select { |c| c.paper_uid == "1"}.count)
             - if @papers.count < 1
                .row
                 .col-md-5
                  div class="alert alert-danger" style="margin-top:20px" role="alert" 
                    <style type="text/css" scoped>
                      | .blink {
                      |    animation: blink 1s steps(5, start) infinite;
                      |   -webkit-animation: blink 1s steps(5, start) infinite;
                      | }
                      | @keyframes blink {
                      |   to {
                      |       visibility: hidden;
                      |    }
                      |  }
                      |  @-webkit-keyframes blink {
                      |   to {
                      |     visibility: hidden;
                      |    }
                      |   }
                      </style>
                    - if @papers.count < 5 
                      img class="image2" src='/assets/steve.jpg' style="margin-left:15px" height="45px"
                    span style="margin-left:40px" class="blink" Post more!
                    
                
      .row
        .col-md-9
          .paperlist
            ul.papers
              - if @papers.count == 0
                  - if @recent_comments.select { |comment| comment.paper_uid == "1"}.count == 0
                    p No papers found!
                  - else
                    = render :partial => "comments/mymessage", :collection => @recent_comments, as: :comment
 
              - else
                - cache [:feed_papers, @papers.map { |paper| "#{paper.uid}/#{paper.scites_count}/#{paper.comments_count}" }] do
                    = render partial: "papers/gpaper", collection: @papers,  as: :paper, locals: { comments: @recent_comments, pCol: @papers}
                = will_paginate @pagination
                / last we want any messages that are "older" than the last scited paper.
                / = render :partial => "comments/mymessage", :collection => @recent_comments.select { |comment| comment.updated_at <= @papers[-1].latest_comment}, as: :comment
 
          .comment-form
               = render 'papers/gcomment_form'
        
        .col-md-3.feed-rightbar
          - cache [:next_prev, current_user, @feed, @date, @range, @backdate, @since_last]
            = render 'feeds/gnext_prev_links'
          h3
          / = "#{twitter_user.name } "
          / | twitter feed 
          /.span style="font-size:90%"
          /    - @tweets.each do |name| 
          /          div style="color:blue;margin-bottom:5px;margin-top:3px"
          /            = name[0]
          /          .span style="margin-left:30px"
          /            = auto_link(name[1])

          / This was just a list of the comments, but they are all on the main column.

          /- cache [:recent_comments, @recent_comments, current_user && current_user.is_moderator?] do
          /  - unless @recent_comments.length == 0
          /    h3
          /      - if @feed.nil?
          /        a href=(comments_path) Recent comments
          /      - else
          /        a href=(feed_comments_path(@feed)) Recent comments
          /    = render :partial => "comments/abbr_comment", :collection => @recent_comments

